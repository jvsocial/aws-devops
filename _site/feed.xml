<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-12-28T20:29:41+00:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">AWS DevOps</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Blue/Green Deployments: Quick Study Notes</title><link href="http://localhost:4000/jekyll/update/2024/12/28/welcome-to-jekyll-copy-2.html" rel="alternate" type="text/html" title="Blue/Green Deployments: Quick Study Notes" /><published>2024-12-28T14:59:21+00:00</published><updated>2024-12-28T14:59:21+00:00</updated><id>http://localhost:4000/jekyll/update/2024/12/28/welcome-to-jekyll%20copy%202</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2024/12/28/welcome-to-jekyll-copy-2.html"><![CDATA[<p><strong>Blue/Green Deployments: Quick Study Notes</strong></p>

<p><strong>Core Concept:</strong> Two identical environments (Blue = Live, Green = New Version). Deploy to Green, test, switch traffic.</p>

<p><strong>Why Blue/Green?</strong></p>

<ul>
  <li><strong>Zero Downtime:</strong> Near-instantaneous switch.</li>
  <li><strong>Reduced Risk:</strong> Easy rollback to Blue if needed.</li>
  <li><strong>Simple Rollbacks:</strong> Just switch traffic back.</li>
  <li><strong>Improved Testing:</strong> Production-like environment for testing.</li>
</ul>

<p><strong>How it Works (Steps):</strong></p>

<ol>
  <li><strong>Set up:</strong> Two identical environments (Blue &amp; Green).</li>
  <li><strong>Deploy:</strong> Deploy new version to Green.</li>
  <li><strong>Test:</strong> Thorough testing in Green.</li>
  <li><strong>Switch Traffic:</strong> Redirect traffic from Blue to Green (Load balancer, DNS).</li>
  <li><strong>Monitor:</strong> Watch Green closely after the switch.</li>
  <li><strong>Repurpose:</strong> Blue becomes the new Green for the next deployment.</li>
</ol>

<p><strong>When to Use:</strong></p>

<ul>
  <li><strong>Frequent Releases:</strong> Ideal for continuous delivery.</li>
  <li><strong>Critical Apps:</strong> Where downtime is unacceptable.</li>
  <li><strong>Complex Deployments:</strong> Simplifies complex updates.</li>
</ul>

<p><strong>When NOT to Use (Consider Alternatives):</strong></p>

<ul>
  <li><strong>Limited Resources:</strong> Requires double the infrastructure.</li>
  <li><strong>Complex Database Migrations:</strong> Backward compatibility is key; requires careful planning.</li>
  <li><strong>Stateful Applications:</strong> Requires strategies for state/session management.</li>
</ul>

<p><strong>Key Considerations (Questions to Ask):</strong></p>

<ul>
  <li><strong>Cost:</strong> Can you afford the extra infrastructure?</li>
  <li><strong>Complexity:</strong> Is the application complex enough to justify it?</li>
  <li><strong>Downtime Tolerance:</strong> How much downtime is acceptable?</li>
  <li><strong>Rollback Needs:</strong> How important is quick rollback?</li>
</ul>

<p><strong>Post-Switch Actions:</strong></p>

<ul>
  <li><strong>Monitor:</strong> Closely monitor the new Green environment.</li>
  <li><strong>Blue Environment:</strong> Keep Blue as backup (short-term) or repurpose it as the new Green.</li>
</ul>

<p><strong>Common Questions &amp; Answers:</strong></p>

<ul>
  <li><strong>Database Migrations:</strong> Use backward-compatible changes; techniques like schema versioning.</li>
  <li><strong>Stateful Apps:</strong> Use session replication, shared storage, or similar methods.</li>
  <li><strong>Automation:</strong> Use load balancers, DNS, CI/CD tools to automate the switch.</li>
  <li><strong>Blue/Green Naming:</strong> Just a convention; any two names work (A/B, Red/Black).</li>
  <li><strong>Deployment to Green Fails:</strong> Fix the issue in Green and redeploy; Blue remains live.</li>
</ul>

<p><strong>In essence:</strong> Blue/Green is about minimizing disruption during deployments by having a ready standby environment.</p>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[Blue/Green Deployments: Quick Study Notes]]></summary></entry><entry><title type="html">Text-Based Diagram (Adaptable to Visual Form)</title><link href="http://localhost:4000/jekyll/update/2024/12/28/welcome-to-jekyll-copy.html" rel="alternate" type="text/html" title="Text-Based Diagram (Adaptable to Visual Form)" /><published>2024-12-28T14:59:21+00:00</published><updated>2024-12-28T14:59:21+00:00</updated><id>http://localhost:4000/jekyll/update/2024/12/28/welcome-to-jekyll%20copy</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2024/12/28/welcome-to-jekyll-copy.html"><![CDATA[<p><strong>Text-Based Diagram (Adaptable to Visual Form):</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>+-----------------+     Traffic Switch    +-----------------+
|   Blue (Live)   |---------------------&gt;|  Green (New)   |
+--------+--------+                     +--------+--------+
         |                                     ^
         |                                     |
         |                                     | Deployment
         v                                     |
+-----------------+                     |
|  Green (Idle)   |&lt;---------------------|
+-----------------+     Next Deploy     |
                                          |
                                          +-----------------+
                                          |   Blue (Idle)   |
                                          +-----------------+
</code></pre></div></div>

<p><strong>Explanation of the Text Diagram:</strong></p>

<ul>
  <li><strong>Boxes:</strong> Represent the environments (Blue and Green).</li>
  <li><strong>“Blue (Live)”</strong>: The currently active environment serving user traffic.</li>
  <li><strong>“Green (New)”</strong>: The environment where the new version is deployed.</li>
  <li><strong>“Green (Idle)”/ “Blue (Idle)”</strong>: The environment that is not currently serving traffic and is ready for the next deployment.</li>
  <li><strong>“Traffic Switch” Arrow:</strong> Shows the redirection of traffic from Blue to Green.</li>
  <li><strong>“Deployment” Arrow:</strong> Shows the deployment of the new version to the Green environment.</li>
  <li><strong>“Next Deploy” Arrow:</strong> Shows how the old Blue environment becomes the new Green for the subsequent deployment.</li>
</ul>

<p><strong>How to Convert this to a Visual Diagram:</strong></p>

<ol>
  <li><strong>Boxes:</strong> Draw two rectangles or rounded rectangles. Label them “Blue” and “Green.”</li>
  <li><strong>Arrows:</strong> Use arrows to connect the boxes as shown in the text diagram.</li>
  <li><strong>Labels:</strong> Add labels like “Live,” “New,” and “Idle” to the boxes to clarify their status.</li>
  <li><strong>Color:</strong> Use blue and green colors for the respective boxes to reinforce the concept.</li>
</ol>

<p><strong>Example of a simple visual representation (using characters):</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>+-------+     Traffic Switch     +-------+
| Blue  |----------------------&gt;| Green |
| Live  |                      | New   |
+-------+                      +-------+
      ^                            |
      | Deployment                 |
      +----------------------------+
</code></pre></div></div>

<p>This is a very basic representation, but it gets the core idea across.</p>

<p>By using the text-based diagram as a starting point and adding some visual elements, you can create a clear and effective diagram for your study notes or handout.</p>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[Text-Based Diagram (Adaptable to Visual Form):]]></summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2024/12/28/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2024-12-28T14:59:21+00:00</published><updated>2024-12-28T14:59:21+00:00</updated><id>http://localhost:4000/jekyll/update/2024/12/28/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2024/12/28/welcome-to-jekyll.html"><![CDATA[<p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>Jekyll requires blog post files to be named according to the following format:</p>

<p><code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.MARKUP</code></p>

<p>Where <code class="language-plaintext highlighter-rouge">YEAR</code> is a four-digit number, <code class="language-plaintext highlighter-rouge">MONTH</code> and <code class="language-plaintext highlighter-rouge">DAY</code> are both two-digit numbers, and <code class="language-plaintext highlighter-rouge">MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.]]></summary></entry></feed>